# Usage:
#
# build:
#   uses: mhils/workflows/.github/workflows/python-build.yml@main
#   with:
#     python-version: "3.11"

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      os:
        type: string
      python-version:
        type: string
      python-version-file:
        type: string
      build-args:
        type: string
      artifact:
        type: string

jobs:
  build:
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version || (inputs.python-version-file == '' && hashFiles('.github/python-version.txt') == '' && hashFiles('.python-version') == '' && '3.11') || '' }}
          python-version-file: ${{ inputs.python-version-file || (inputs.python-version == '' && hashFiles('.github/python-version.txt') != '' && '.github/python-version.txt') || '' }}
      
      # potentially add https://youtu.be/n39uvwdW5ek?t=579 here.
      
      # install all build dependencies
      - name: Install build from PyPI
        uses: install-pinned/build@cf4a01f09945135c4749f1d9ceddcb356550cba8  # 0.10.0
      - name: Install setuptools from PyPI
        uses: install-pinned/setuptools@450f4af8ab94dddc2fa05fd6a689ac0d5a830a00  # 67.3.2
      - name: Install wheel from PyPI
        uses: install-pinned/wheel@dfd9a05d07cb7ae303ed7cbcdeaa30f3fd44b658  # 0.38.4
        
      # build wheel without network connection where possible
      - if: runner.os == 'Linux'
        run: sudo unshare --net -- $(which python3) -m build --no-isolation ${{ inputs.build-args }}
      - if: runner.os != 'Linux'
        run: python3 -m build --no-isolation ${{ inputs.build-args }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact || 'wheels' }}
          path: dist/
