# Usage:
#
# build:
#   uses: mhils/workflows/.github/workflows/python-build.yml@main
#   with:
#     python-version: "3.11"
#   permissions:
#     contents: read
#     id-token: write
#     attestations: write

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      os:
        type: string
      python-version:
        type: string
      python-version-file:
        type: string
      build-args:
        type: string
      artifact:
        type: string
      build-backend:
        type: string
        default: 'setuptools'
      build-offline:
        type: boolean
        default: true
      attest-provenance:
        type: boolean
        default: true

jobs:
  build:
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version || (inputs.python-version-file == '' && hashFiles('.github/python-version.txt') == '' && hashFiles('.python-version') == '' && '3.11') || '' }}
          python-version-file: ${{ inputs.python-version-file || (inputs.python-version == '' && hashFiles('.github/python-version.txt') != '' && '.github/python-version.txt') || '' }}
      
      - uses: ./.github/actions/pre-build
        if: ${{ hashFiles('.github/actions/pre-build/action.yml') != '' }}
      
      # install all build dependencies
      - name: Install build from PyPI
        uses: install-pinned/build@67851131466f5b68a159307abd07e57680a9b4fb  # 0.10.0
      - name: Install wheel from PyPI
        uses: install-pinned/wheel@c926bd4c553fa4bf7d957d60abf42b3104129128  # 0.38.4

      - name: Install setuptools from PyPI
        if: inputs.build-backend == 'setuptools'
        uses: install-pinned/setuptools@98613c7925b480a50ba4cb81897fa440367d11d6  # 67.3.2
      - name: Install pdm-backend from PyPI
        if: inputs.build-backend == 'pdm-backend'
        uses: install-pinned/pdm-backend@c8e92bb975bbf3f65bc18cb88441e929ca49ddc3  # 2.1.7

      # build wheel without network connection where possible
      - if: (runner.os == 'Linux' && inputs.build-offline)
        run: sudo unshare --net -- $(which python3) -m build --no-isolation ${{ inputs.build-args }}
      - if: (runner.os == 'Linux' && inputs.build-offline) == false
        run: python3 -m build --no-isolation ${{ inputs.build-args }}
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact || 'wheels' }}
          path: dist/

  attest:
    needs: build
    if: inputs.attest-provenance && github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact || 'wheels' }}
          path: dist/
      - uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/*'
    
